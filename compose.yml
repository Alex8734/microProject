version: '3.8'

services:
  # Frontend Angular service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network
    # We'll use Caddy to serve the frontend

  # Backend ASP.NET Core API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=app_db;User Id=postgres;Password=postgres;
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5000:5000"
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=MxDb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # Caddy as reverse proxy/ingress
  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  caddy-data:
  caddy-config:
